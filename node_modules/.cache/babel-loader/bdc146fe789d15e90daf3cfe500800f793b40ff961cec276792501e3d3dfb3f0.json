{"ast":null,"code":"//Received body data and call LoginAPI method\nexport const LoginAPI = async data => {\n  const CallData = await fetch(\"https://fakestoreapi.com/auth/login\", {\n    method: \"POST\",\n    headers: {\n      Accepts: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  const resdata = await CallData.json();\n  return {\n    data: resdata,\n    state: true,\n    username: data.username\n  };\n};\n\n//Received body data and call SignUpAPI method\n_c = LoginAPI;\nexport const SignUpAPI = data => {\n  fetch(\"https://fakestoreapi.com/users\", {\n    method: \"POST\",\n    headers: {\n      Accepts: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(res => res.json()).then(json => {\n    if (!json || json === null) {\n      alert(\"Error\");\n    } else {\n      localStorage.setItem(\"ID\", json.id);\n      localStorage.setItem(\"Data\", JSON.stringify(data));\n    }\n  });\n};\n\n// receive All user data\n_c2 = SignUpAPI;\nexport const GetUsers = async UserName => {\n  // debugger;\n  const GetData = await fetch(\"https://fakestoreapi.com/users\");\n  const ResGetData = await GetData.json();\n  let data;\n  ResGetData.map((Element, index) => {\n    if (UserName === Element.username) {\n      data = Element;\n    }\n    return null;\n  });\n  return data;\n};\n\n// Update user Data\n_c3 = GetUsers;\nexport const UpdateData = async data => {\n  const putData = await fetch(`https://fakestoreapi.com/users/${data.id}`, {\n    method: \"PUT\",\n    headers: {\n      Accepts: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  const Resputdata = putData.json();\n  return Resputdata;\n};\n_c4 = UpdateData;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LoginAPI\");\n$RefreshReg$(_c2, \"SignUpAPI\");\n$RefreshReg$(_c3, \"GetUsers\");\n$RefreshReg$(_c4, \"UpdateData\");","map":{"version":3,"names":["LoginAPI","data","CallData","fetch","method","headers","Accepts","body","JSON","stringify","resdata","json","state","username","_c","SignUpAPI","then","res","alert","localStorage","setItem","id","_c2","GetUsers","UserName","GetData","ResGetData","map","Element","index","_c3","UpdateData","putData","Resputdata","_c4","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/E-commerce/src/server/UserAPI.js"],"sourcesContent":["//Received body data and call LoginAPI method\r\nexport const LoginAPI = async (data) => {\r\n  const CallData = await fetch(\"https://fakestoreapi.com/auth/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accepts: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  const resdata = await CallData.json();\r\n  \r\n  return {\r\n    data: resdata,\r\n    state: true,\r\n    username: data.username,\r\n  }\r\n};\r\n\r\n//Received body data and call SignUpAPI method\r\nexport const SignUpAPI = (data) => {\r\n  fetch(\"https://fakestoreapi.com/users\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accepts: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      if (!json || json === null) {\r\n        alert(\"Error\");\r\n      } else {\r\n        localStorage.setItem(\"ID\", json.id);\r\n        localStorage.setItem(\"Data\", JSON.stringify(data));\r\n      }\r\n    });\r\n};\r\n\r\n// receive All user data\r\nexport const GetUsers = async (UserName) => {\r\n  // debugger;\r\n  const GetData = await fetch(\"https://fakestoreapi.com/users\");\r\n  const ResGetData = await GetData.json();\r\n  let data;\r\n  ResGetData.map((Element, index) => {\r\n    if (UserName === Element.username) {\r\n      data = Element;\r\n    }\r\n    return null;\r\n  });\r\n  return data;\r\n};\r\n\r\n// Update user Data\r\n\r\nexport const UpdateData = async (data) => {\r\n  const putData = await fetch(`https://fakestoreapi.com/users/${data.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accepts: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n  const Resputdata = putData.json();\r\n\r\n  return Resputdata;\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;IAClEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,OAAO,EAAE,kBAAkB;MAC3B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;EAC3B,CAAC,CAAC;EAEF,MAAMS,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAErC,OAAO;IACLV,IAAI,EAAES,OAAO;IACbE,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAEZ,IAAI,CAACY;EACjB,CAAC;AACH,CAAC;;AAED;AAAAC,EAAA,GAnBad,QAAQ;AAoBrB,OAAO,MAAMe,SAAS,GAAId,IAAI,IAAK;EACjCE,KAAK,CAAC,gCAAgC,EAAE;IACtCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,OAAO,EAAE,kBAAkB;MAC3B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;EAC3B,CAAC,CAAC,CACCe,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACN,IAAI,CAAC,CAAC,CAAC,CACzBK,IAAI,CAAEL,IAAI,IAAK;IACd,IAAI,CAACA,IAAI,IAAIA,IAAI,KAAK,IAAI,EAAE;MAC1BO,KAAK,CAAC,OAAO,CAAC;IAChB,CAAC,MAAM;MACLC,YAAY,CAACC,OAAO,CAAC,IAAI,EAAET,IAAI,CAACU,EAAE,CAAC;MACnCF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;IACpD;EACF,CAAC,CAAC;AACN,CAAC;;AAED;AAAAqB,GAAA,GApBaP,SAAS;AAqBtB,OAAO,MAAMQ,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C;EACA,MAAMC,OAAO,GAAG,MAAMtB,KAAK,CAAC,gCAAgC,CAAC;EAC7D,MAAMuB,UAAU,GAAG,MAAMD,OAAO,CAACd,IAAI,CAAC,CAAC;EACvC,IAAIV,IAAI;EACRyB,UAAU,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IACjC,IAAIL,QAAQ,KAAKI,OAAO,CAACf,QAAQ,EAAE;MACjCZ,IAAI,GAAG2B,OAAO;IAChB;IACA,OAAO,IAAI;EACb,CAAC,CAAC;EACF,OAAO3B,IAAI;AACb,CAAC;;AAED;AAAA6B,GAAA,GAdaP,QAAQ;AAgBrB,OAAO,MAAMQ,UAAU,GAAG,MAAO9B,IAAI,IAAK;EACxC,MAAM+B,OAAO,GAAG,MAAM7B,KAAK,CAAE,kCAAiCF,IAAI,CAACoB,EAAG,EAAC,EAAE;IACvEjB,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,OAAO,EAAE,kBAAkB;MAC3B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;EAC3B,CAAC,CAAC;EACF,MAAMgC,UAAU,GAAGD,OAAO,CAACrB,IAAI,CAAC,CAAC;EAEjC,OAAOsB,UAAU;AACnB,CAAC;AAACC,GAAA,GAZWH,UAAU;AAAA,IAAAjB,EAAA,EAAAQ,GAAA,EAAAQ,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}